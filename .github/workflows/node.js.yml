# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - node-version: 16.x
            os: ubuntu-latest
          - node-version: 16.x
            os: windows-latest
          - node-version: 16.x
            os: macos-latest

    steps:
      - name: Platform ${{ matrix.os }}
        uses: actions/checkout@v2
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Disable husky
        run: npx pinst --disable
        
      - name: Use node_modules cache
        uses: actions/cache@v2
        id: yarn-cache 
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        
      - name: Test
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: yarn test
        
      - name: Upload coverage to Codecov
        if: ${{ matrix.os == 'ubuntu-latest' }} 
        uses: codecov/codecov-action@v1

      - name: Build
        run: yarn build

      - name: Publish
        run: yarn run publish

      - name: Archive Release
        uses: vimtor/action-zip@v1
        with:
          files: publish/
          dest: ${{ matrix.os }}.zip

      - name: Upload Release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}.zip
          path: ${{ matrix.os }}.zip

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Platform ${{ matrix.os }}
        uses: actions/checkout@v2

      - name: Download Release
        uses: actions/download-artifact@v2
        with:
          name: windows-latest.zip ubuntu-latest.zip macos-latest.zip
          path: release

      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "latest"
            prerelease: true
            title: Latest-Release
            files: |
              release/*-latest.zip
